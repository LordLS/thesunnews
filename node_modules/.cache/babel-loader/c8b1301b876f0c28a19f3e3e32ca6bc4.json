{"ast":null,"code":"var _jsxFileName = \"/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/PubSection.js\";\nimport 'antd/dist/antd.css';\nimport React, { useEffect, useState } from 'react';\nimport { Header, Message, Icon, Item, Divider } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useParams, NavLink, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../services';\nimport { parseIsoTimetoString } from '../helpers/timeConverter';\n\nconst PubSection = () => {\n  const [publication, setPub] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(`http://127.0.0.1:8000/${params['pubsection']}`);\n        setPub(res.data.results);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    }\n\n    if (authenticationService.isAuthenticated) {\n      fetchData();\n    }\n  }, [params['pubsection']]);\n\n  if (authenticationService.isAuthenticated === false) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \" \", params['pubsection'], \" \"), /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, publication && publication.map(pub => /*#__PURE__*/React.createElement(\"div\", {\n    key: pub.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"small\",\n    src: pub.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: `/${pub.section}/${pub.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 53\n    }\n  }, pub.title)), /*#__PURE__*/React.createElement(Item.Extra, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), \" : \", parseIsoTimetoString(pub.date_time_posted), \" | \", pub.section)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })))), error && /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default PubSection;","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/PubSection.js"],"names":["React","useEffect","useState","Header","Message","Icon","Item","Divider","axios","useParams","NavLink","Redirect","authenticationService","parseIsoTimetoString","PubSection","publication","setPub","loading","setLoading","error","setError","params","fetchData","res","get","data","results","err","message","isAuthenticated","map","pub","id","thumbnail","section","title","date_time_posted"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,OAArC,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,QAA5B,QAA2C,kBAA3C;AACA,SAAQC,qBAAR,QAAoC,aAApC;AACA,SAAQC,oBAAR,QAAmC,0BAAnC;;AAIA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,WAAD,EAAcC,MAAd,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMmB,MAAM,GAAGZ,SAAS,EAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeqB,SAAf,GAA2B;AACzBJ,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACA,cAAMK,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,yBAAwBH,MAAM,CAAC,YAAD,CAAe,EAAxD,CAAlB;AACAL,QAAAA,MAAM,CAACO,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAN;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJD,CAIE,OAAOS,GAAP,EAAY;AACVP,QAAAA,QAAQ,CAACO,GAAG,CAACC,OAAL,CAAR;AACAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACF;;AACD,QAAGN,qBAAqB,CAACiB,eAAzB,EAAyC;AACvCP,MAAAA,SAAS;AACV;AACF,GAfM,EAeJ,CAACD,MAAM,CAAC,YAAD,CAAP,CAfI,CAAT;;AAiBA,MAAIT,qBAAqB,CAACiB,eAAtB,KAA0C,KAA9C,EAAoD;AAClD,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkBR,MAAM,CAAC,YAAD,CAAxB,MADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,IAAKA,WAAW,CAACe,GAAZ,CAAgBC,GAAG,iBAClC;AAAK,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,GAAG,EAAED,GAAG,CAACE,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAG,IAAGF,GAAG,CAACG,OAAQ,IAAGH,GAAG,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0C,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,GAAG,CAACI,KAA1B,CAA1C,CADA,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,SAAmCtB,oBAAoB,CAACkB,GAAG,CAACK,gBAAL,CAAvD,SAAkFL,GAAG,CAACG,OAAtF,CAFF,CAFA,eAMA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CADe,CADnB,CAFF,EAeGf,KAAK,iBAAI,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,OAAO,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfZ,CAFF;AAoBD,CA9CD;;AA+CA,eAAeL,UAAf","sourcesContent":["import 'antd/dist/antd.css'\nimport React, {useEffect, useState} from 'react'\nimport {Header, Message, Icon, Item, Divider} from 'semantic-ui-react'\nimport axios from 'axios'\nimport {useParams, NavLink, Redirect} from 'react-router-dom'\nimport {authenticationService} from '../services'\nimport {parseIsoTimetoString} from '../helpers/timeConverter'\n\n\n\nconst PubSection = () => {\n  const [publication, setPub] = useState()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const params = useParams()\n\n  useEffect(() => {\n      async function fetchData() {\n        setLoading(true);\n        try {\n            const res = await axios.get(`http://127.0.0.1:8000/${params['pubsection']}`);\n            setPub(res.data.results);\n            setLoading(false)\n        } catch (err) {\n            setError(err.message)\n            setLoading(false)\n        } \n      }\n      if(authenticationService.isAuthenticated){\n        fetchData()\n      }\n    }, [params['pubsection']])\n  \n  if (authenticationService.isAuthenticated === false){\n    return <Redirect to='/' />\n  }  \n  return(\n    \n    <div>\n      <Header as='h1'> {params['pubsection']} </Header>\n      <Item.Group>\n        {publication && (publication.map(pub => (\n          <div key={pub.id}>\n          <Item.Image size='small' src={pub.thumbnail} />\n          <Item.Content>\n          <NavLink to={`/${pub.section}/${pub.id}`}><Item.Header as='h1'>{pub.title}</Item.Header></NavLink>\n            <Item.Extra><Icon name='time'/> : {parseIsoTimetoString(pub.date_time_posted)} | {pub.section}</Item.Extra>\n          </Item.Content>\n          <Divider />\n          </div>\n        )))}\n\n      </Item.Group>\n      {error && <Message negative message={error}/>}\n     </div>\n  )\n}\nexport default PubSection;"]},"metadata":{},"sourceType":"module"}