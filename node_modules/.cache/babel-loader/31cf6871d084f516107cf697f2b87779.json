{"ast":null,"code":"var _jsxFileName = \"/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/Home.js\";\nimport 'antd/dist/antd.css';\nimport React, { useEffect, useState } from 'react';\nimport { Header, Item, Divider, Icon, Grid, GridColumn, Message, Placeholder } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport { api } from '../helpers/api';\nimport { parseIsoTimetoString } from '../helpers/timeConverter';\n\nconst PubHome = () => {\n  const [publication, setPub] = useState();\n  const [error, setError] = useState(null);\n  const [todayDate, setTodayDate] = useState(new Date().toUTCString());\n\n  function getTodayDate() {\n    setTodayDate(new Date().toUTCString());\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get(api.pub.list);\n        setPub(res.data.results);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n\n    fetchData(); //   Update Date on Home Page\n\n    setInterval(getTodayDate, 1000);\n  }, []);\n\n  const filter_obj_section = (objlist, section) => {\n    return objlist.filter(function (a) {\n      return a.section === section;\n    });\n  };\n\n  const row_content = (pubList, section) => {\n    return filter_obj_section(pubList, section).slice(0, 3).map(x => {\n      return /*#__PURE__*/React.createElement(Grid.Column, {\n        key: x.id,\n        width: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: `/${x.section}/${x.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        size: \"small\",\n        src: x.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 63\n        }\n      }), /*#__PURE__*/React.createElement(Item.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        as: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 32\n        }\n      }, x.title))), /*#__PURE__*/React.createElement(Item.Extra, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 45\n        }\n      }), \" : \", parseIsoTimetoString(x.date_time_posted), \" | \", x.section)));\n    });\n  };\n\n  const PlaceholderForSectionRow = () => {\n    let content = [];\n\n    for (let i = 0; i < 3; i++) {\n      content.push( /*#__PURE__*/React.createElement(Grid.Column, {\n        key: i,\n        width: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Placeholder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Placeholder.Image, {\n        square: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Placeholder.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Placeholder.Line, {\n        length: \"short\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Placeholder.Line, {\n        length: \"short\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      })))));\n    }\n\n    return content.map(x => x);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    columns: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Welcome to The Sun News .com\")), /*#__PURE__*/React.createElement(GridColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, todayDate))), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"News \")), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), publication ? publication.slice(0, 2).map(x => {\n    return /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `/${x.section}/${x.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item.Image, {\n      size: \"large\",\n      src: x.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }, x.title))), /*#__PURE__*/React.createElement(Item.Extra, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 49\n      }\n    }), \" : \", parseIsoTimetoString(x.date_time_posted), \" | \", x.section)));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"No Highlights at the moment ...\")), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Sports \")), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), publication ? row_content(publication, 'Sports') : /*#__PURE__*/React.createElement(PlaceholderForSectionRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 64\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Business \")), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })), publication ? row_content(publication, 'Business') : /*#__PURE__*/React.createElement(PlaceholderForSectionRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 70\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"World \")), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  })), publication ? row_content(publication, 'World') : /*#__PURE__*/React.createElement(PlaceholderForSectionRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 71\n    }\n  }))), /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \")));\n};\n\nexport default PubHome;","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/Home.js"],"names":["React","useEffect","useState","Header","Item","Divider","Icon","Grid","GridColumn","Message","Placeholder","axios","NavLink","api","parseIsoTimetoString","PubHome","publication","setPub","error","setError","todayDate","setTodayDate","Date","toUTCString","getTodayDate","fetchData","res","get","pub","list","data","results","err","message","setInterval","filter_obj_section","objlist","section","filter","a","row_content","pubList","slice","map","x","id","thumbnail","title","date_time_posted","PlaceholderForSectionRow","content","i","push","textAlign"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,UAA3C,EAAuDC,OAAvD,EAAgEC,WAAhE,QAAkF,mBAAlF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAAQC,oBAAR,QAAmC,0BAAnC;;AAIA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,WAAD,EAAcC,MAAd,IAAwBf,QAAQ,EAAtC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAIoB,IAAJ,GAAWC,WAAX,EAAD,CAA1C;;AAEA,WAASC,YAAT,GAAwB;AACtBH,IAAAA,YAAY,CAAC,IAAIC,IAAJ,GAAWC,WAAX,EAAD,CAAZ;AACH;;AAECtB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAewB,SAAf,GAA2B;AACzB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUd,GAAG,CAACe,GAAJ,CAAQC,IAAlB,CAAlB;AACAZ,QAAAA,MAAM,CAACS,GAAG,CAACI,IAAJ,CAASC,OAAV,CAAN;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVb,QAAAA,QAAQ,CAACa,GAAG,CAACC,OAAL,CAAR;AACH;AACF;;AACDR,IAAAA,SAAS,GATG,CAUd;;AACES,IAAAA,WAAW,CAACV,YAAD,EAAe,IAAf,CAAX;AACD,GAZM,EAYJ,EAZI,CAAT;;AAcE,QAAMW,kBAAkB,GAAE,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC5C,WAAOD,OAAO,CAACE,MAAR,CAAe,UAASC,CAAT,EAAY;AAC9B,aAAOA,CAAC,CAACF,OAAF,KAAcA,OAArB;AACH,KAFM,CAAP;AAIH,GALD;;AAOA,QAAMG,WAAW,GAAG,CAACC,OAAD,EAAUJ,OAAV,KAAsB;AAClC,WACIF,kBAAkB,CAACM,OAAD,EAAUJ,OAAV,CAAlB,CAAqCK,KAArC,CAA2C,CAA3C,EAA8C,CAA9C,EAAiDC,GAAjD,CAAqDC,CAAC,IAAI;AAC1D,0BACI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,GAAG,EAAEA,CAAC,CAACC,EAApB;AAAwB,QAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAG,IAAGD,CAAC,CAACP,OAAQ,IAAGO,CAAC,CAACC,EAAG,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsC,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,QAAA,GAAG,EAAED,CAAC,CAACE,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,eACQ,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACD,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBF,CAAC,CAACG,KAAxB,CADC,CADR,CADA,eAKQ,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAY,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,SAAmCjC,oBAAoB,CAAC8B,CAAC,CAACI,gBAAH,CAAvD,SAAgFJ,CAAC,CAACP,OAAlF,CALR,CADJ,CADJ;AAYC,KAbD,CADJ;AAgBP,GAjBD;;AAmBA,QAAMY,wBAAwB,GAAG,MAAM;AACnC,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtBD,MAAAA,OAAO,CAACE,IAAR,eACI,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,GAAG,EAAED,CAAlB;AAAqB,QAAA,KAAK,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD,CAAa,KAAb;AAAmB,QAAA,MAAM,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEQ,oBAAC,WAAD,CAAa,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,WAAD,CAAa,IAAb;AAAkB,QAAA,MAAM,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFR,eAKQ,oBAAC,WAAD,CAAa,IAAb;AAAkB,QAAA,MAAM,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR,CADA,CADR,CADJ;AAaH;;AACD,WAAOD,OAAO,CAACP,GAAR,CAAYC,CAAC,IAAIA,CAAjB,CAAP;AACH,GAlBD;;AAwBF,sBACE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,CADJ,eAIQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBjC,SAAlB,CADA,CAJR,CADJ,eAUI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOKJ,WAAW,GACRA,WAAW,CAAC0B,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,EAAuBC,GAAvB,CAA2BC,CAAC,IAAI;AAC5B,wBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAuB,MAAA,GAAG,EAAEA,CAAC,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAG,IAAGD,CAAC,CAACP,OAAQ,IAAGO,CAAC,CAACC,EAAG,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsC,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,GAAG,EAAED,CAAC,CAACE,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,eACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBF,CAAC,CAACG,KAAxB,CADJ,CADJ,CADA,eAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAY,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,SAAmCjC,oBAAoB,CAAC8B,CAAC,CAACI,gBAAH,CAAvD,SAAgFJ,CAAC,CAACP,OAAlF,CALJ,CADJ,CADJ;AAWH,GAZD,CADQ,gBAeZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAtBJ,CAVJ,eAoCI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOCrB,WAAW,GAAEwB,WAAW,CAACxB,WAAD,EAAc,QAAd,CAAb,gBAAuC,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPnD,CApCJ,eA8CI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,eAII,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOKA,WAAW,GAAGwB,WAAW,CAACxB,WAAD,EAAc,UAAd,CAAd,gBAAyC,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPzD,CA9CJ,eAwDI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,CADJ,eAIQ,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJR,EAOSA,WAAW,GAAGwB,WAAW,CAACxB,WAAD,EAAc,OAAd,CAAd,gBAAsC,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP1D,CAxDJ,CADJ,eAoEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,KAAK,iBAAI,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBA,KAApB,MADV,CApEF,CADF;AA0ED,CAnJD;;AAoJA,eAAeH,OAAf","sourcesContent":["import 'antd/dist/antd.css'\nimport React, {useEffect, useState} from 'react'\nimport {Header, Item, Divider, Icon, Grid, GridColumn, Message, Placeholder} from 'semantic-ui-react'\nimport axios from 'axios'\nimport { NavLink } from 'react-router-dom'\nimport {api} from '../helpers/api'\nimport {parseIsoTimetoString} from '../helpers/timeConverter'\n\n\n\nconst PubHome = () => {\n  const [publication, setPub] = useState()\n  const [error, setError] = useState(null)\n  const [todayDate, setTodayDate] = useState(new Date().toUTCString())\n\n  function getTodayDate() {\n    setTodayDate(new Date().toUTCString()) \n}\n\n  useEffect(() => {\n      async function fetchData() {\n        try {\n            const res = await axios.get(api.pub.list);\n            setPub(res.data.results);\n        } catch (err) {\n            setError(err.message)\n        } \n      }\n      fetchData();\n    //   Update Date on Home Page\n      setInterval(getTodayDate, 1000)\n    }, [])\n\n    const filter_obj_section =(objlist, section) => {\n        return objlist.filter(function(a) {\n            return a.section === section \n        })\n        \n    }   \n\n    const row_content = (pubList, section) => {\n            return (\n                filter_obj_section(pubList, section).slice(0, 3).map(x => {\n                return(\n                    <Grid.Column key={x.id} width={5}>\n                        <Item >\n                        <NavLink to={`/${x.section}/${x.id}`}><Item.Image size=\"small\" src={x.thumbnail} />\n                                <Item.Content>\n                               <Item.Header as='h2'>{x.title}</Item.Header>\n                                </Item.Content></NavLink>\n                                <Item.Extra><Icon name='time'/> : {parseIsoTimetoString(x.date_time_posted)} | {x.section}</Item.Extra>\n\n                        </Item>\n                    </Grid.Column>\n                )   \n                }))\n\n    }\n\n    const PlaceholderForSectionRow = () => {\n        let content = []\n        for(let i = 0; i < 3; i++){\n            content.push(\n                <Grid.Column key={i} width={5}>\n                        <Item >\n                        <Placeholder>\n                            <Placeholder.Image square />\n                                <Placeholder.Header>\n                                <Placeholder.Line length='short' />\n                                </Placeholder.Header>\n                                <Placeholder.Line length='short' />    \n                                </Placeholder>\n                        </Item>\n                    </Grid.Column>\n            )\n        }\n        return content.map(x => x)\n    }\n\n    \n\n    \n    \n  return(\n    <div style={{ textAlign: 'left'}}>\n        <Grid>\n            <Grid.Row columns='equal'>\n                <GridColumn >\n                    <Header disabled>Welcome to The Sun News .com</Header>\n                    </GridColumn>\n                    <GridColumn>\n                    <Header disabled>{todayDate}</Header>\n                    </GridColumn>\n            </Grid.Row>\n\n            <Grid.Row>\n                <Grid.Column width={3}>\n                    <Header as='h2'>News </Header>\n                </Grid.Column>\n                <Grid.Column width={13}>\n                    <Divider />\n                </Grid.Column>\n                {publication ?\n                    publication.slice(0,2).map(x => {\n                        return(\n                            <Grid.Column width={8} key={x.id}>\n                                <Item>\n                                <NavLink to={`/${x.section}/${x.id}`}><Item.Image size=\"large\" src={x.thumbnail} />\n                                    <Item.Content>\n                                        <Item.Header as='h2'>{x.title}</Item.Header> \n                                    </Item.Content></NavLink>\n                                    <Item.Extra><Icon name='time'/> : {parseIsoTimetoString(x.date_time_posted)} | {x.section}</Item.Extra>\n                                </Item>\n                            </Grid.Column>\n                        )\n                    })\n                :\n                <p>No Highlights at the moment ...</p>\n                }\n            </Grid.Row>\n\n            <Grid.Row>\n                <Grid.Column width={3}>\n                    <Header as='h2'>Sports </Header>\n                </Grid.Column>\n                <Grid.Column width={13}>\n                    <Divider />\n                </Grid.Column>\n            {publication? row_content(publication, 'Sports') : <PlaceholderForSectionRow />}\n            </Grid.Row>\n\n            <Grid.Row>\n                <Grid.Column width={3}>\n                    <Header as='h2'>Business </Header>\n                </Grid.Column>\n                <Grid.Column width={13}>\n                    <Divider />\n                </Grid.Column>\n                {publication ? row_content(publication, 'Business'): <PlaceholderForSectionRow />}\n            </Grid.Row>\n\n            <Grid.Row>\n                <Grid.Column width={3}>\n                        <Header as='h2'>World </Header>\n                    </Grid.Column>\n                    <Grid.Column width={13}>\n                        <Divider />\n                    </Grid.Column>\n                    {publication ? row_content(publication, 'World'): <PlaceholderForSectionRow />}\n            </Grid.Row>\n\n        </Grid>\n      <Item.Group>  \n      {error && <Message negative> {error} </Message>}\n      </Item.Group>\n    </div>\n  )\n}\nexport default PubHome;"]},"metadata":{},"sourceType":"module"}