{"ast":null,"code":"var _jsxFileName = \"/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/PubDetails.js\";\nimport 'antd/dist/antd.css';\nimport React, { useEffect, useState } from 'react';\nimport { Header, Image, Item, Icon, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport Message from '../components/Message';\nimport { useParams, NavLink } from 'react-router-dom';\nimport { api } from '../helpers/api';\nimport ReactMarkdown from 'react-markdown';\n\nconst PubDetail = () => {\n  const [publication, setPub] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(`${api.pub.list}${params['pubid']}/`);\n        setPub(res.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const get_date = () => {\n    let d = new Date(publication.date_time_posted);\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, publication ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, publication.title), /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"large\",\n    src: publication.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: publication.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Item.Extra, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), get_date(), \"  \"), /*#__PURE__*/React.createElement(Item.Extra, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Writers: \", publication.writer.map(x => {\n    return `${x}   `;\n  }), \" \")))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), error && /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    to: `${params['pubsection']}/${params['pubid']}/update`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 73\n    }\n  }, \"Update \")));\n};\n\nexport default PubDetail;","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/PubDetails.js"],"names":["React","useEffect","useState","Header","Image","Item","Icon","Button","axios","Message","useParams","NavLink","api","ReactMarkdown","PubDetail","publication","setPub","loading","setLoading","error","setError","params","fetchData","res","get","pub","list","data","err","message","get_date","d","Date","date_time_posted","months","getDate","getMonth","getFullYear","textAlign","title","thumbnail","content","writer","map","x"],"mappings":"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","sourcesContent":["import 'antd/dist/antd.css'\nimport React, {useEffect, useState} from 'react';\nimport {Header, Image, Item, Icon, Button} from 'semantic-ui-react'\nimport axios from 'axios'\nimport Message from '../components/Message'\nimport {useParams, NavLink} from 'react-router-dom'\nimport {api} from '../helpers/api'\nimport ReactMarkdown from 'react-markdown'\n\n\n\n\n\n\n\n\n\nconst PubDetail = () => {\n\n  const [publication, setPub] = useState()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const params = useParams()\n\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n          const res = await axios.get(`${api.pub.list}${params['pubid']}/`);\n          setPub(res.data);\n          setLoading(false)\n      } catch (err) {\n          setError(err.message)\n          setLoading(false)\n      } \n    }\n    fetchData();\n  }, [])\n\n  const get_date = () => {\n    let d = new Date(publication.date_time_posted)\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return (\n      `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`\n    )\n  }\n\n\n  return(\n    <div style={{textAlign: 'left'}}>\n      {publication ?\n      <div>\n        <Item >\n        <Header>{publication.title}</Header>\n        <Item.Image size=\"large\" src={publication.thumbnail} />\n            <Item.Content>\n            <Item.Description>\n            <ReactMarkdown source={publication.content}/>\n              </Item.Description>\n                <Item.Extra><Icon name='time'/>{get_date()}  </Item.Extra>\n                <Item.Extra>Writers: {publication.writer.map(x => {\n                  return (\n                    `${x}   `\n                  )\n                })} </Item.Extra>\n            </Item.Content>\n        </Item>\n      </div>\n\n\n      :\n    \n      <p></p>\n\n      }\n\n\n      <Header></Header>\n      {error && <Message negative message={error}/>}\n      <NavLink to={`${params['pubsection']}/${params['pubid']}/update`}><Button>Update </Button></NavLink>\n\n      </div>\n\n  )\n}\nexport default PubDetail;"]},"metadata":{},"sourceType":"module"}