{"ast":null,"code":"import axios from'axios';import{api}from'../helpers/api';var authAxios=axios.create();authAxios.interceptors.request.use(function(config){var newConfig=config;var token=localStorage.getItem('token');newConfig.headers={\"Authorization\":\"Token \".concat(token)};return newConfig;});function signup(username,email,password1,password2){return axios.post(\"\".concat(api.auth.signUp),{\"username\":username,\"email\":email,\"password1\":password1,\"password2\":password2}).then(function(res){return res;});}function login(email,password){return axios.post(\"\".concat(api.auth.loginUrl),{\"email\":email,\"password\":password}).then(function(res){localStorage.setItem(\"token\",res.data.key);return res;});}function isAuthenticated(){var token=localStorage.getItem('token');return token!==null&&token!==undefined;}function logout(){// authAxios.post(`${api.auth.logoutUrl}`)\nvar token=localStorage.getItem('token');// Delete token so you get a new one when you log back in\naxios.delete(\"http://127.0.0.1:8000/token-delete/\".concat(token),{headers:{Authorization:\"Token \".concat(token)}}).then(function(res){return console.log(res);}).catch(function(err){return console.log(err);});localStorage.removeItem('token');}var authenticationService={isAuthenticated:isAuthenticated(),logout:logout,login:login,signup:signup};export{authAxios,authenticationService};","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/backend/thesunnews/frontend/thesunnews/src/services/authentication.service.js"],"names":["axios","api","authAxios","create","interceptors","request","use","config","newConfig","token","localStorage","getItem","headers","signup","username","email","password1","password2","post","auth","signUp","then","res","login","password","loginUrl","setItem","data","key","isAuthenticated","undefined","logout","delete","Authorization","console","log","catch","err","removeItem","authenticationService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,KAAkB,gBAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGF,KAAK,CAACG,MAAN,EAAlB,CAEAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmC,SAAAC,MAAM,CAAI,CACzC,GAAMC,CAAAA,SAAS,CAAGD,MAAlB,CACA,GAAME,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAH,SAAS,CAACI,OAAV,CAAoB,CAChB,gCAA0BH,KAA1B,CADgB,CAApB,CAGA,MAAOD,CAAAA,SAAP,CACH,CAPD,EAWA,QAASK,CAAAA,MAAT,CAAgBC,QAAhB,CAA0BC,KAA1B,CAAgCC,SAAhC,CAA2CC,SAA3C,CAAsD,CAClD,MAAOjB,CAAAA,KAAK,CAACkB,IAAN,WAAcjB,GAAG,CAACkB,IAAJ,CAASC,MAAvB,EACH,CACI,WAAYN,QADhB,CAEI,QAASC,KAFb,CAGI,YAAaC,SAHjB,CAII,YAAaC,SAJjB,CADG,EAQDI,IARC,CAQI,SAAAC,GAAG,CAAI,CACV,MAAOA,CAAAA,GAAP,CACH,CAVE,CAAP,CAYH,CAED,QAASC,CAAAA,KAAT,CAAeR,KAAf,CAAsBS,QAAtB,CAA+B,CAC3B,MAAOxB,CAAAA,KAAK,CAACkB,IAAN,WAAcjB,GAAG,CAACkB,IAAJ,CAASM,QAAvB,EACC,CACK,QAASV,KADd,CAEK,WAAYS,QAFjB,CADD,EAKIH,IALJ,CAKS,SAAAC,GAAG,CAAI,CACXZ,YAAY,CAACgB,OAAb,CAAqB,OAArB,CAA8BJ,GAAG,CAACK,IAAJ,CAASC,GAAvC,EACA,MAAON,CAAAA,GAAP,CACF,CARH,CAAP,CAUH,CAGD,QAASO,CAAAA,eAAT,EAA2B,CACvB,GAAMpB,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,MAAOF,CAAAA,KAAK,GAAK,IAAV,EAAkBA,KAAK,GAAKqB,SAAnC,CACH,CAED,QAASC,CAAAA,MAAT,EAAkB,CACd;AACA,GAAMtB,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA;AACAX,KAAK,CAACgC,MAAN,8CAAmDvB,KAAnD,EAA4D,CAACG,OAAO,CAAE,CAClEqB,aAAa,iBAAWxB,KAAX,CADqD,CAAV,CAA5D,EAEIY,IAFJ,CAES,SAAAC,GAAG,QAAIY,CAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ,CAAJ,EAFZ,EAEkCc,KAFlC,CAEwC,SAAAC,GAAG,QAAIH,CAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ,EAF3C,EAGA3B,YAAY,CAAC4B,UAAb,CAAwB,OAAxB,EACH,CAED,GAAMC,CAAAA,qBAAqB,CAAG,CAC1BV,eAAe,CAACA,eAAe,EADL,CAE1BE,MAAM,CAANA,MAF0B,CAG1BR,KAAK,CAALA,KAH0B,CAI1BV,MAAM,CAANA,MAJ0B,CAA9B,CAQA,OAAQX,SAAR,CAAmBqC,qBAAnB","sourcesContent":["import axios from 'axios'\nimport {api} from '../helpers/api'\n\nconst authAxios = axios.create()\n\nauthAxios.interceptors.request.use(config => {\n    const newConfig = config\n    const token = localStorage.getItem('token')\n    newConfig.headers = {\n        \"Authorization\": `Token ${token}`\n    }\n    return newConfig\n})\n\n\n\nfunction signup(username, email,password1, password2) {\n    return axios.post(`${api.auth.signUp}`, \n        {\n            \"username\": username,\n            \"email\": email,\n            \"password1\": password1,\n            \"password2\": password2,\n\n        }\n        ).then(res => {\n            return res\n        }\n        ) \n}\n\nfunction login(email, password){\n    return axios.post(`${api.auth.loginUrl}`, \n            {\n                 \"email\": email,\n                 \"password\": password\n             }\n             ).then(res => {\n                localStorage.setItem(\"token\", res.data.key)\n                return res\n             }\n             )\n}\n\n\nfunction isAuthenticated() {\n    const token = localStorage.getItem('token')\n    return token !== null && token !== undefined\n}\n\nfunction logout() {\n    // authAxios.post(`${api.auth.logoutUrl}`)\n    const token = localStorage.getItem('token')\n    // Delete token so you get a new one when you log back in\n    axios.delete(`http://127.0.0.1:8000/token-delete/${token}`, {headers: {\n        Authorization: `Token ${token}`\n    }}).then(res => console.log(res)).catch(err => console.log(err));\n    localStorage.removeItem('token')\n}\n\nconst authenticationService = {\n    isAuthenticated:isAuthenticated(),\n    logout,\n    login,\n    signup,\n    \n}\n\nexport {authAxios, authenticationService}"]},"metadata":{},"sourceType":"module"}