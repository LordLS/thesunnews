{"ast":null,"code":"import axios from 'axios';\nimport { api } from '../helpers/api';\nconst authAxios = axios.create();\nauthAxios.interceptors.request.use(config => {\n  const newConfig = config;\n  const token = localStorage.getItem('token');\n  console.log('token');\n  newConfig.headers = {\n    \"Authorization\": `Token ${token}`\n  };\n  return newConfig;\n});\n\nfunction login(email, password) {\n  return axios.post(`${api.pub.loginUrl}`, {\n    \"email\": email,\n    \"password\": password\n  }).then(res => {\n    localStorage.setItem(\"token\", res.data.key);\n    return res;\n  });\n}\n\nfunction isAuthenticated() {\n  const token = localStorage.getItem('token');\n  return token !== null && token !== undefined;\n}\n\nfunction logout() {\n  localStorage.removeItem('token');\n}\n\nconst authenticationService = {\n  isAuthenticated: isAuthenticated(),\n  logout,\n  login\n};\nexport { authAxios, authenticationService };","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/services/authentication.service.js"],"names":["axios","api","authAxios","create","interceptors","request","use","config","newConfig","token","localStorage","getItem","console","log","headers","login","email","password","post","pub","loginUrl","then","res","setItem","data","key","isAuthenticated","undefined","logout","removeItem","authenticationService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AAEA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,EAAlB;AAEAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,MAAM,IAAI;AACzC,QAAMC,SAAS,GAAGD,MAAlB;AACA,QAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAL,EAAAA,SAAS,CAACM,OAAV,GAAoB;AAChB,qBAAkB,SAAQL,KAAM;AADhB,GAApB;AAGA,SAAOD,SAAP;AACH,CARD;;AAUA,SAASO,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAA+B;AAC3B,SAAOjB,KAAK,CAACkB,IAAN,CAAY,GAAEjB,GAAG,CAACkB,GAAJ,CAAQC,QAAS,EAA/B,EACC;AACK,aAASJ,KADd;AAEK,gBAAYC;AAFjB,GADD,EAKII,IALJ,CAKSC,GAAG,IAAI;AACXZ,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BD,GAAG,CAACE,IAAJ,CAASC,GAAvC;AACA,WAAOH,GAAP;AACF,GARH,CAAP;AAUH;;AAED,SAASI,eAAT,GAA2B;AACvB,QAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAOF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKkB,SAAnC;AACH;;AAED,SAASC,MAAT,GAAkB;AACdlB,EAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AACH;;AAED,MAAMC,qBAAqB,GAAG;AAC1BJ,EAAAA,eAAe,EAACA,eAAe,EADL;AAE1BE,EAAAA,MAF0B;AAG1Bb,EAAAA;AAH0B,CAA9B;AAQA,SAAQb,SAAR,EAAmB4B,qBAAnB","sourcesContent":["import axios from 'axios'\nimport {api} from '../helpers/api'\n\nconst authAxios = axios.create()\n\nauthAxios.interceptors.request.use(config => {\n    const newConfig = config\n    const token = localStorage.getItem('token')\n    console.log('token')\n    newConfig.headers = {\n        \"Authorization\": `Token ${token}`\n    }\n    return newConfig\n})\n\nfunction login(email, password){\n    return axios.post(`${api.pub.loginUrl}`, \n            {\n                 \"email\": email,\n                 \"password\": password\n             }\n             ).then(res => {\n                localStorage.setItem(\"token\", res.data.key)\n                return res\n             }\n             )\n}\n\nfunction isAuthenticated() {\n    const token = localStorage.getItem('token')\n    return token !== null && token !== undefined\n}\n\nfunction logout() {\n    localStorage.removeItem('token')\n}\n\nconst authenticationService = {\n    isAuthenticated:isAuthenticated(),\n    logout,\n    login,\n}\n\n\n\nexport {authAxios, authenticationService}"]},"metadata":{},"sourceType":"module"}