{"ast":null,"code":"var _jsxFileName = \"/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/components/UpdatePubForm.js\";\nimport React, { Component, useRef, useState, useEffect } from 'react';\nimport { Button, Checkbox, Form, Header, Image } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { history } from '../helpers';\nimport { api } from '../helpers/api';\nimport Message from '../components/Message';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport { useParams } from 'react-router-dom';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { authAxios } from '../services';\nconst mdParser = new MarkdownIt();\n\nconst UpdatePubForm = ({\n  data\n}) => {\n  const [title, setTitle] = useState(data.title);\n  const [section, setSection] = useState(data.section);\n  const [content, setContent] = useState(data.content);\n  const [currentThumb, setCurrentThumb] = useState(data.thumbnail);\n  const [thumbnail, setThumbnail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fileInputRef = useRef();\n  const params = useParams();\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n\n    if (thumbnail) {\n      formData.append('thumbnail', thumbnail);\n    }\n\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('section', section);\n    authAxios.put(`${api.pub.list}${params['pubid']}/`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      setLoading(true);\n      history.push(`/${section}/${params['pubid']}`);\n      window.location.reaload(false);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  }\n\n  useEffect(() => {\n    console.log(data.thumbnail);\n  }, []);\n\n  function handleEditorChange({\n    html,\n    text\n  }) {\n    setContent(text);\n    console.log('handleEditorChange', html, text);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Update Publication Form\"), currentThumb && /*#__PURE__*/React.createElement(Image, {\n    src: currentThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    value: section,\n    onChange: e => setSection(e.target.value),\n    label: \"Section\",\n    control: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"---\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Business\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Business\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"World\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"World\")), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(MdEditor, {\n    value: content,\n    style: {\n      height: \"500px\"\n    },\n    renderHTML: text => mdParser.render(text),\n    onChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    disabled: true,\n    value: thumbnail.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => fileInputRef.current.click(),\n    content: \"Upload a thumbnail\",\n    labelPosition: \"left\",\n    icon: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setThumbnail(e.target.files[0]),\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"I agree to the Terms and Conditions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })), error && /*#__PURE__*/React.createElement(Message, {\n    color: \"red\",\n    message: error.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    loading: loading,\n    disabled: loading,\n    fluid: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Submit\"))));\n};\n\nexport default UpdatePubForm;","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/components/UpdatePubForm.js"],"names":["React","Component","useRef","useState","useEffect","Button","Checkbox","Form","Header","Image","axios","history","api","Message","MarkdownIt","MdEditor","useParams","authAxios","mdParser","UpdatePubForm","data","title","setTitle","section","setSection","content","setContent","currentThumb","setCurrentThumb","thumbnail","setThumbnail","loading","setLoading","error","setError","fileInputRef","params","handleFormSubmit","e","preventDefault","formData","FormData","append","put","pub","list","headers","then","res","push","window","location","reaload","catch","err","console","log","handleEditorChange","html","text","textAlign","target","value","height","render","name","current","click","files","message"],"mappings":"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","sourcesContent":["import React, { Component, useRef, useState, useEffect } from 'react'\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Header,\n  Image,\n} from 'semantic-ui-react'\nimport axios from 'axios'\nimport {history} from '../helpers'\nimport {api} from '../helpers/api'\nimport Message from '../components/Message'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport {useParams} from 'react-router-dom'\nimport 'react-markdown-editor-lite/lib/index.css';\nimport {authAxios} from '../services'\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\nconst UpdatePubForm = ({data}) => {\n    const [title, setTitle] = useState(data.title)\n    const [section, setSection] = useState(data.section)\n    const [content, setContent] = useState(data.content)\n    const [currentThumb, setCurrentThumb] = useState(data.thumbnail)\n    const [thumbnail, setThumbnail] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    \n    const fileInputRef = useRef()\n    const params = useParams()\n\n    function handleFormSubmit(e) {\n        e.preventDefault();\n        const formData = new FormData()\n        if (thumbnail) {\n            formData.append('thumbnail', thumbnail)\n        }\n        formData.append('title', title)\n        formData.append('content', content)\n        formData.append('section', section)\n        authAxios\n        .put(`${api.pub.list}${params['pubid']}/`, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }}).then(res => {\n                setLoading(true)\n                history.push(`/${section}/${params['pubid']}`)\n                window.location.reaload(false)\n            }).catch(err => {\n                console.log(err)\n                setError(err)\n            })\n    }\n\n    useEffect(()=>{\n        console.log(data.thumbnail)\n    },[])\n\n    function handleEditorChange({html, text}) { \n        setContent(text)  \n        console.log('handleEditorChange', html, text)\n      }\n\n    return(\n        <div>\n\n            <Header as='h2'>Update Publication Form</Header>\n            \n            {currentThumb && <Image src={currentThumb} />}\n            <div style={{textAlign: 'left'}}>\n                <Form onSubmit={handleFormSubmit}>\n                <Form.Field value={section} onChange={e=> setSection(e.target.value)} label='Section' control='select'>\n                    <option value=''>---</option>\n                    <option value='Business'>Business</option>\n                    <option value='Sports'>Sports</option>\n                    <option value='World'>World</option>\n                </Form.Field>\n                <Form.Field>\n                    <label>Title</label>\n                    <input value={title} onChange={e => setTitle(e.target.value)} placeholder='Title' />\n                </Form.Field>\n                <Form.Field>\n                <label>Content</label>\n                <MdEditor\n                    value={content}\n                    style={{ height: \"500px\" }}\n                    renderHTML={(text) => mdParser.render(text)}\n                    onChange={handleEditorChange}\n                        />\n                </Form.Field>\n                <Form.Field>\n                    {<input disabled value={thumbnail.name}/>}\n                    <Button type='button'onClick={() => fileInputRef.current.click()} content='Upload a thumbnail' labelPosition='left' icon='image'/>\n                    <input onChange={e => setThumbnail(e.target.files[0])}ref={fileInputRef} type='file' hidden />\n                </Form.Field>\n                <Form.Field>\n                    <Checkbox label='I agree to the Terms and Conditions' />\n                </Form.Field>\n                {error && <Message color='red' message={error.message} />}\n                <Button primary loading={loading} disabled={loading} fluid type='submit'>Submit</Button>\n                \n                </Form>\n        </div>\n\n            \n    </div>\n    )\n    \n\n  \n}\n\n\n\nexport default UpdatePubForm\n"]},"metadata":{},"sourceType":"module"}