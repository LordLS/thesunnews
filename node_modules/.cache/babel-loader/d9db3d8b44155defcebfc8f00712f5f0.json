{"ast":null,"code":"var _jsxFileName = \"/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/PubFeed.js\";\nimport 'antd/dist/antd.css';\nimport React, { useEffect, useState } from 'react';\nimport { Header, Message, Icon, Item } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { authenticationService } from '../services';\nimport { parseIsoTimetoString } from '../helpers/timeConverter';\n\nconst PubFeed = () => {\n  const [publication, setPub] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        const res = await axios.get('http://127.0.0.1:8000/publication/');\n        console.log(res.data.results);\n        setPub(res.data.results);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n  const items = [];\n\n  if (publication) {\n    publication.map(pub => {\n      items.push({\n        childKey: pub.id,\n        image: pub.thumbnail,\n        header: pub.title,\n        description: pub.content.substr(1, 100),\n        meta: 'Metadata',\n        extra: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n          name: \"time\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 22\n          }\n        }), \" : \", parseIsoTimetoString(pub.date_time_posted), \" | \", pub.section)\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \" Feed \"), /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, publication && publication.map(pub => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Item.Image, {\n    left: true,\n    size: \"small\",\n    src: pub.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, pub.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, pub.content.substr(1, 75)), /*#__PURE__*/React.createElement(Item.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Item.Extra, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), \" : \", parseIsoTimetoString(pub.date_time_posted), \" | \", pub.section))))));\n};\n\nexport default PubFeed;","map":{"version":3,"sources":["/Users/clintonm/Desktop/FS_PROJECT/TheSunNews/frontend/thesunnews/src/containers/PubFeed.js"],"names":["React","useEffect","useState","Header","Message","Icon","Item","axios","authenticationService","parseIsoTimetoString","PubFeed","publication","setPub","loading","setLoading","error","setError","fetchData","res","get","console","log","data","results","err","message","items","map","pub","push","childKey","id","image","thumbnail","header","title","description","content","substr","meta","extra","date_time_posted","section"],"mappings":"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","sourcesContent":["import 'antd/dist/antd.css'\nimport React, {useEffect, useState} from 'react'\nimport {Header, Message, Icon, Item} from 'semantic-ui-react'\nimport axios from 'axios'\nimport {authenticationService} from '../services'\nimport {parseIsoTimetoString} from '../helpers/timeConverter'\n\n\nconst PubFeed = () => {\n  const [publication, setPub] = useState()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n      async function fetchData() {\n        setLoading(true);\n        try {\n            const res = await axios.get('http://127.0.0.1:8000/publication/');\n            console.log(res.data.results);\n            setPub(res.data.results);\n            setLoading(false)\n        } catch (err) {\n            setError(err.message)\n            setLoading(false)\n        } \n      }\n      fetchData();\n    }, [])\n\n    const items = []\n\n    if (publication){\n      publication.map(pub => {\n        items.push(\n          { childKey: pub.id,\n            image: pub.thumbnail,\n            header: pub.title,\n            description: pub.content.substr(1, 100),\n            meta: 'Metadata',\n            extra: <><Icon name='time'/> : {parseIsoTimetoString(pub.date_time_posted)} | {pub.section}</>,}\n\n        )\n      })\n    }\n    \n      \n\n    \n    \n     \n      \n\n    \n    \n  return(\n    \n    <div>\n      <Header as='h1'> Feed </Header>\n      <Item.Group>\n        {publication && (publication.map(pub => (\n          <>\n          <Item.Image left size='small' src={pub.thumbnail} />\n          <Item.Content>\n        <Item.Header as='a'>{pub.title}</Item.Header>\n        <Item.Meta>{pub.content.substr(1, 75)}</Item.Meta>\n            <Item.Description>\n            </Item.Description>\n            <Item.Extra><Icon name='time'/> : {parseIsoTimetoString(pub.date_time_posted)} | {pub.section}</Item.Extra>\n          </Item.Content>\n          </>\n\n        )))}\n\n      </Item.Group>\n\n     </div>\n  )\n}\nexport default PubFeed;"]},"metadata":{},"sourceType":"module"}