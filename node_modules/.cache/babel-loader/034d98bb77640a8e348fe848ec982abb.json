{"ast":null,"code":"var _jsxFileName = \"/Users/clintonm/Desktop/thesunnewsFrontend/thesunnews/src/containers/UpdatePub.js\";\nimport React, { useEffect, useState } from 'react';\nimport { authAxios } from '../services';\nimport Message from '../components/Message';\nimport UpdatePubForm from '../components/UpdatePubForm';\nimport { api } from '../helpers/api';\nimport { useParams, Redirect } from 'react-router-dom';\n\nconst UpdatePub = () => {\n  const [publication, setPub] = useState();\n  const [error, setError] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await authAxios.get(`${api.pub.list}${params['pubid']}/`);\n        setPub(res.data);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      console.log();\n    }\n\n    fetchData();\n  }, []);\n\n  if (publication) {\n    if (publication.is_author === false) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(Message, {\n    negative: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \" \", error, \" \"), publication && /*#__PURE__*/React.createElement(UpdatePubForm, {\n    data: publication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }));\n};\n\nexport default UpdatePub;","map":{"version":3,"sources":["/Users/clintonm/Desktop/thesunnewsFrontend/thesunnews/src/containers/UpdatePub.js"],"names":["React","useEffect","useState","authAxios","Message","UpdatePubForm","api","useParams","Redirect","UpdatePub","publication","setPub","error","setError","params","fetchData","res","get","pub","list","data","err","message","console","log","is_author"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,kBAAlC;;AAIA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,WAAD,EAAcC,MAAd,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMY,MAAM,GAAGP,SAAS,EAAxB;AAEFN,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA2B;AACzB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMb,SAAS,CAACc,GAAV,CAAe,GAAEX,GAAG,CAACY,GAAJ,CAAQC,IAAK,GAAEL,MAAM,CAAC,OAAD,CAAU,GAAhD,CAAlB;AACAH,QAAAA,MAAM,CAACK,GAAG,CAACI,IAAL,CAAN;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVR,QAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR;AACD;;AACDT,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAIL,WAAJ,EAAgB;AACd,QAAIA,WAAW,CAACe,SAAZ,KAA0B,KAA9B,EAAoC;AAClC,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAGD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,KAAK,iBAAI,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBA,KAApB,MADd,EAEKF,WAAW,iBAAI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpB,CADF;AAQD,CAjCD;;AAkCA,eAAeD,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {authAxios} from '../services'\nimport Message from '../components/Message'\nimport UpdatePubForm from '../components/UpdatePubForm';\nimport {api} from '../helpers/api'\nimport {useParams, Redirect} from 'react-router-dom'\n\n\n\nconst UpdatePub = () => {\n    const [publication, setPub] = useState()\n    const [error, setError] = useState(null)\n    const params = useParams()\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n          const res = await authAxios.get(`${api.pub.list}${params['pubid']}/`);\n          setPub(res.data);\n      } catch (err) {\n          setError(err.message)\n      } \n      console.log()\n    }\n    fetchData();\n  }, [])\n\n  if (publication){\n    if (publication.is_author === false){\n      return <Redirect to='/'/>\n    }\n  }\n  \n\n  return(\n    <div>\n        {error && <Message negative> {error} </Message>}\n        {publication && <UpdatePubForm data={publication}/>}\n      </div>\n\n  )\n    \n}\nexport default UpdatePub;"]},"metadata":{},"sourceType":"module"}